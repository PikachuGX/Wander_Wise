{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ansh9\\\\Desktop\\\\Projects\\\\WanderWise\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\n/* global google */\nimport { FaLocationArrow, FaTimes, FaCar, FaTree, FaMoneyBillWave, FaInfoCircle, FaPlane, FaWalking, FaTrain, FaUser, FaHotel, FaUtensils, FaGasPump, FaStore } from \"react-icons/fa\";\nimport { GoogleMap, Marker, Autocomplete, DirectionsRenderer, InfoWindow, Polyline, useJsApiLoader, Circle } from \"@react-google-maps/api\";\nimport { routesService } from \"../services/api\";\nimport { GOOGLE_MAPS_LIBRARIES, GOOGLE_MAPS_API_KEY, MAP_OPTIONS, MAP_CONTAINER_STYLE, DEFAULT_CENTER } from \"../utils/mapsConfig\";\n\n// Algorithm path colors\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst algorithmColors = {\n  \"a-star\": \"#4285F4\",\n  // Blue for A*\n  \"dijkstra\": \"#FF0000\",\n  // Red for Dijkstra\n  \"bfs\": \"#00FF00\",\n  // Green for BFS\n  \"dfs\": \"#FFA500\" // Orange for DFS\n};\n\n// Transport mode speeds in km/h\nconst transportSpeeds = {\n  \"driving\": 50,\n  \"flying\": 800,\n  \"walking\": 5,\n  \"transit\": 35\n};\nconst Map = ({\n  onRouteCalculated,\n  sourceValue,\n  destinationValue,\n  onInputValueChange,\n  onLocationUpdate\n}) => {\n  _s();\n  // Add API loader\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n    libraries: GOOGLE_MAPS_LIBRARIES\n  });\n\n  // References\n  const sourceRef = useRef(null);\n  const destinationRef = useRef(null);\n  const mapRef = useRef(null);\n\n  // State\n  const [map, setMap] = useState(null);\n  const [startMarker, setStartMarker] = useState(null);\n  const [endMarker, setEndMarker] = useState(null);\n  const [airports, setAirports] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [flightPath, setFlightPath] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [routePreferences, setRoutePreferences] = useState({\n    avoidTolls: false,\n    avoidHighways: false,\n    mode: \"driving\"\n  });\n  const [algorithm, setAlgorithm] = useState(\"a-star\");\n  const [transportMode, setTransportMode] = useState(\"driving\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [toast, setToast] = useState({\n    show: false,\n    message: \"\",\n    type: \"\"\n  });\n  const [showAlgorithmInfo, setShowAlgorithmInfo] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(null);\n\n  // Callback when map loads\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n    setMap(map);\n  }, []);\n\n  // Show toast notification\n  const showToast = (message, type = \"success\") => {\n    setToast({\n      show: true,\n      message,\n      type\n    });\n    setTimeout(() => setToast({\n      show: false,\n      message: \"\",\n      type: \"\"\n    }), 3000);\n  };\n\n  // Get address from coordinates\n  const getAddressFromCoordinates = async coords => {\n    try {\n      const geocoder = new google.maps.Geocoder();\n      const response = await new Promise((resolve, reject) => {\n        geocoder.geocode({\n          location: coords\n        }, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results[0].formatted_address);\n          } else {\n            reject(new Error(\"Geocoding failed\"));\n          }\n        });\n      });\n      return response;\n    } catch (error) {\n      console.error(\"Error getting address:\", error);\n      return \"Current Location\";\n    }\n  };\n\n  // Calculate route using Google Directions Service\n  const calculateRoute = async () => {\n    if (!sourceRef.current.value || !destinationRef.current.value) {\n      showToast(\"Please enter both source and destination\", \"error\");\n      return;\n    }\n    setIsLoading(true);\n    setAirports(null);\n    setFlightPath(null);\n    // Close the algorithm panel after starting calculation\n    setShowAlgorithmInfo(false);\n    try {\n      // Get the places from autocomplete\n      const sourcePlace = sourceRef.current.value;\n      const destPlace = destinationRef.current.value;\n\n      // First, use Google's Geocoding to get coordinates\n      const geocoder = new google.maps.Geocoder();\n\n      // Get source coordinates\n      const sourceGeocode = await new Promise((resolve, reject) => {\n        geocoder.geocode({\n          address: sourcePlace\n        }, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results[0]);\n          } else {\n            reject(new Error(`Geocoding failed for ${sourcePlace}`));\n          }\n        });\n      });\n\n      // Get destination coordinates\n      const destGeocode = await new Promise((resolve, reject) => {\n        geocoder.geocode({\n          address: destPlace\n        }, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results[0]);\n          } else {\n            reject(new Error(`Geocoding failed for ${destPlace}`));\n          }\n        });\n      });\n      const sourceCoords = {\n        lat: sourceGeocode.geometry.location.lat(),\n        lng: sourceGeocode.geometry.location.lng()\n      };\n      const destCoords = {\n        lat: destGeocode.geometry.location.lat(),\n        lng: destGeocode.geometry.location.lng()\n      };\n\n      // Set markers for source and destination (except for flights)\n      setStartMarker(sourceCoords);\n      setEndMarker(destCoords);\n\n      // Center the map to show both points\n      const bounds = new google.maps.LatLngBounds();\n      bounds.extend(sourceCoords);\n      bounds.extend(destCoords);\n      map.fitBounds(bounds);\n\n      // Now, use our backend API for route calculation using selected algorithm\n      const source = {\n        name: sourcePlace,\n        lat: sourceCoords.lat,\n        lng: sourceCoords.lng\n      };\n      const destination = {\n        name: destPlace,\n        lat: destCoords.lat,\n        lng: destCoords.lng\n      };\n\n      // Call our API to calculate path using the selected algorithm\n      await routesService.calculateRoute(source, destination, algorithm, transportMode);\n\n      // Calculate appropriate distance and time based on transport mode\n      let distanceValue, durationValue, directionsResult;\n      if (transportMode === \"flying\") {\n        // For flights, calculate direct distance and find airports\n        const directDistance = google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(sourceCoords), new google.maps.LatLng(destCoords));\n        distanceValue = directDistance;\n        durationValue = directDistance / 1000 / transportSpeeds.flying * 3600;\n\n        // Find nearby airports\n        const sourceAirport = await findNearbyAirports(sourceCoords);\n        const destAirport = await findNearbyAirports(destCoords);\n\n        // Set airport markers\n        if (sourceAirport && destAirport) {\n          setAirports({\n            source: sourceAirport,\n            destination: destAirport\n          });\n\n          // Create flight path\n          setFlightPath([sourceCoords, sourceAirport.position,\n          // From source to airport\n          destAirport.position,\n          // From airport to airport (flight)\n          destCoords // From airport to destination\n          ]);\n\n          // Get directions to and from airports\n          const directionsService = new google.maps.DirectionsService();\n\n          // Source to source airport\n          const toAirportDirections = await directionsService.route({\n            origin: sourceCoords,\n            destination: sourceAirport.position,\n            travelMode: google.maps.TravelMode.DRIVING\n          });\n\n          // Destination airport to destination\n          const fromAirportDirections = await directionsService.route({\n            origin: destAirport.position,\n            destination: destCoords,\n            travelMode: google.maps.TravelMode.DRIVING\n          });\n\n          // Add these distances to total\n          const toAirportDistance = toAirportDirections.routes[0].legs[0].distance.value;\n          const fromAirportDistance = fromAirportDirections.routes[0].legs[0].distance.value;\n\n          // Update total distance to include travel to/from airports\n          distanceValue += toAirportDistance + fromAirportDistance;\n\n          // Update duration to include travel to/from airports\n          const toAirportDuration = toAirportDirections.routes[0].legs[0].duration.value;\n          const fromAirportDuration = fromAirportDirections.routes[0].legs[0].duration.value;\n          durationValue += toAirportDuration + fromAirportDuration;\n\n          // Plus 2 hours for airport procedures\n          durationValue += 2 * 60 * 60; // 2 hours in seconds\n        }\n\n        // Clear any existing directions\n        setDirectionsResponse(null);\n      } else {\n        // For other modes, get directions from Google\n        const directionsService = new google.maps.DirectionsService();\n        directionsResult = await directionsService.route({\n          origin: sourceCoords,\n          destination: destCoords,\n          travelMode: google.maps.TravelMode[transportMode.toUpperCase()],\n          avoidTolls: routePreferences.avoidTolls,\n          avoidHighways: routePreferences.avoidHighways\n        });\n        distanceValue = directionsResult.routes[0].legs[0].distance.value;\n        durationValue = directionsResult.routes[0].legs[0].duration.value;\n\n        // Set directions with custom styling for algorithms\n        const rendererOptions = {\n          directions: directionsResult,\n          options: {\n            polylineOptions: {\n              strokeColor: algorithmColors[algorithm],\n              strokeWeight: 6,\n              strokeOpacity: 0.8\n            },\n            suppressMarkers: true // Suppress default markers since we're using custom ones\n          }\n        };\n        setDirectionsResponse(rendererOptions);\n        setFlightPath(null);\n        setAirports(null);\n      }\n\n      // Format distance\n      let distanceText;\n      if (distanceValue < 1000) {\n        distanceText = `${Math.round(distanceValue)} m`;\n      } else {\n        distanceText = `${(distanceValue / 1000).toFixed(2)} km`;\n      }\n\n      // Format duration\n      let durationText;\n      if (durationValue < 60) {\n        durationText = `${Math.round(durationValue)} sec`;\n      } else if (durationValue < 3600) {\n        durationText = `${Math.floor(durationValue / 60)} min`;\n      } else {\n        const hours = Math.floor(durationValue / 3600);\n        const minutes = Math.floor(durationValue % 3600 / 60);\n        durationText = `${hours} hr ${minutes} min`;\n      }\n      setDistance(distanceText);\n      setDuration(durationText);\n\n      // Notify parent component about the calculated route\n      if (onRouteCalculated) {\n        onRouteCalculated(source, destination, {\n          source,\n          destination,\n          distance: distanceValue,\n          duration: durationValue\n        });\n      }\n\n      // Show success message\n      let algorithmName;\n      switch (algorithm) {\n        case \"dijkstra\":\n          algorithmName = \"Dijkstra's\";\n          break;\n        case \"bfs\":\n          algorithmName = \"BFS\";\n          break;\n        case \"dfs\":\n          algorithmName = \"DFS\";\n          break;\n        default:\n          algorithmName = \"A*\";\n      }\n      showToast(`Route calculated using ${algorithmName} algorithm`);\n    } catch (error) {\n      console.error(\"Error calculating route:\", error);\n      showToast(error.message || \"Error calculating route\", \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear route\n  const clearRoute = () => {\n    setStartMarker(null);\n    setEndMarker(null);\n    setDirectionsResponse(null);\n    setFlightPath(null);\n    setAirports(null);\n    setDistance(\"\");\n    setDuration(\"\");\n    // Update parent state\n    onInputValueChange('source', '');\n    onInputValueChange('destination', '');\n  };\n\n  // Clear a specific field (origin or destination)\n  const clearField = field => {\n    if (field === 'source') {\n      onInputValueChange('source', '');\n      sourceRef.current.value = '';\n      if (startMarker) {\n        setStartMarker(null);\n        // If we have a route calculated, clear it\n        if (directionsResponse || flightPath) {\n          clearRoute();\n        }\n      }\n    } else if (field === 'destination') {\n      onInputValueChange('destination', '');\n      destinationRef.current.value = '';\n      if (endMarker) {\n        setEndMarker(null);\n        // If we have a route calculated, clear it\n        if (directionsResponse || flightPath) {\n          clearRoute();\n        }\n      }\n    }\n  };\n\n  // Update input refs when props change\n  useEffect(() => {\n    if (sourceRef.current && sourceValue) {\n      sourceRef.current.value = sourceValue;\n    }\n    if (destinationRef.current && destinationValue) {\n      destinationRef.current.value = destinationValue;\n    }\n  }, [sourceValue, destinationValue]);\n\n  // Center map on current position\n  const getCurrentLocation = async () => {\n    if (navigator.geolocation) {\n      setIsLoading(true);\n      try {\n        const position = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(pos => resolve({\n            lat: pos.coords.latitude,\n            lng: pos.coords.longitude\n          }), error => reject(error), {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 0\n          });\n        });\n\n        // Set current location first time we get it\n        if (!currentLocation) {\n          setCurrentLocation(position);\n\n          // Pass location to parent component\n          if (onLocationUpdate) {\n            onLocationUpdate(position);\n          }\n        }\n        showToast(\"Exact location found!\");\n\n        // Set the source field to current location\n        if (sourceRef.current) {\n          const address = await getAddressFromCoordinates(position);\n          sourceRef.current.value = address;\n          handleInputChange('source', address);\n        }\n        if (map) {\n          map.setCenter(position);\n          map.setZoom(16); // Higher zoom for more precise location view\n        }\n      } catch (error) {\n        console.error(\"Error getting current location:\", error);\n        showToast(\"Unable to retrieve your exact location\", \"error\");\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      showToast(\"Error: Your browser doesn't support geolocation\", \"error\");\n    }\n  };\n\n  // Effect when component mounts - try to get current location automatically\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setCurrentLocation(pos);\n\n        // Pass current location to parent component\n        if (onLocationUpdate) {\n          onLocationUpdate(pos);\n        }\n      }, error => {\n        console.error(\"Geolocation error:\", error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0\n      });\n    }\n  }, []);\n\n  // Handle route preference changes\n  const handlePreferenceChange = e => {\n    const {\n      name,\n      value,\n      checked,\n      type\n    } = e.target;\n    setRoutePreferences(prev => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  };\n\n  // Handle algorithm change\n  const handleAlgorithmChange = e => {\n    setAlgorithm(e.target.value);\n\n    // Update route color if directions exist\n    if (directionsResponse) {\n      setDirectionsResponse({\n        ...directionsResponse,\n        options: {\n          ...directionsResponse.options,\n          polylineOptions: {\n            ...directionsResponse.options.polylineOptions,\n            strokeColor: algorithmColors[e.target.value]\n          }\n        }\n      });\n    }\n  };\n\n  // Handle transport mode change\n  const handleTransportModeChange = mode => {\n    setTransportMode(mode);\n    if (mode !== \"flying\") {\n      setAirports(null);\n      setFlightPath(null);\n    }\n  };\n\n  // Toggle algorithm info\n  const toggleAlgorithmInfo = () => {\n    setShowAlgorithmInfo(!showAlgorithmInfo);\n  };\n\n  // Get icon for transport mode button\n  const getTransportIcon = mode => {\n    switch (mode) {\n      case \"flying\":\n        return /*#__PURE__*/_jsxDEV(FaPlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 16\n        }, this);\n      case \"walking\":\n        return /*#__PURE__*/_jsxDEV(FaWalking, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 16\n        }, this);\n      case \"transit\":\n        return /*#__PURE__*/_jsxDEV(FaTrain, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(FaCar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Find nearby airports\n  const findNearbyAirports = async location => {\n    try {\n      // In a real app, we'd use a Places API call\n      // For demonstration, we'll simulate finding airports\n\n      // Generate a fake airport nearby (within ~10-20km)\n      const airportOffset = () => Math.random() * 0.2 - 0.1; // Random offset of ~10km\n\n      const airportLat = location.lat + airportOffset();\n      const airportLng = location.lng + airportOffset();\n\n      // Generate an IATA code\n      const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      const randomLetter = () => alphabet[Math.floor(Math.random() * alphabet.length)];\n      const iataCode = randomLetter() + randomLetter() + randomLetter();\n      return {\n        position: {\n          lat: airportLat,\n          lng: airportLng\n        },\n        name: `${iataCode} International Airport`,\n        iata: iataCode\n      };\n    } catch (error) {\n      console.error(\"Error finding airports:\", error);\n      return null;\n    }\n  };\n\n  // Handle input changes and pass to parent component\n  const handleInputChange = (type, value) => {\n    if (onInputValueChange) {\n      onInputValueChange(type, value);\n    }\n  };\n\n  // Render loading state if Google Maps isn't loaded yet\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Maps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-full\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: MAP_CONTAINER_STYLE,\n        center: DEFAULT_CENTER,\n        zoom: 10,\n        options: MAP_OPTIONS,\n        onLoad: onMapLoad,\n        children: [directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directionsResponse.directions,\n          options: directionsResponse.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), flightPath && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Polyline, {\n            path: [flightPath[0], flightPath[1]],\n            options: {\n              strokeColor: \"#808080\",\n              // Gray for ground transport\n              strokeOpacity: 0.8,\n              strokeWeight: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            path: [flightPath[1], flightPath[2]],\n            options: {\n              strokeColor: algorithmColors[algorithm],\n              strokeOpacity: 0.8,\n              strokeWeight: 5,\n              geodesic: true,\n              // Creates an arc for flight path\n              icons: [{\n                icon: {\n                  path: 'M 0,-1 0,1',\n                  strokeOpacity: 1,\n                  scale: 4\n                },\n                offset: '0',\n                repeat: '20px'\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            path: [flightPath[2], flightPath[3]],\n            options: {\n              strokeColor: \"#808080\",\n              // Gray for ground transport\n              strokeOpacity: 0.8,\n              strokeWeight: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), startMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: startMarker,\n          label: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this), endMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: endMarker,\n          label: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this), airports && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: airports.source.position,\n            icon: {\n              url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n              scaledSize: new google.maps.Size(32, 32)\n            },\n            onClick: () => setSelectedMarker({\n              position: airports.source.position,\n              title: airports.source.name,\n              description: `Airport code: ${airports.source.iata}`\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: airports.destination.position,\n            icon: {\n              url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n              scaledSize: new google.maps.Size(32, 32)\n            },\n            onClick: () => setSelectedMarker({\n              position: airports.destination.position,\n              title: airports.destination.name,\n              description: `Airport code: ${airports.destination.iata}`\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: selectedMarker.position,\n          onCloseClick: () => setSelectedMarker(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-gray-900 mb-1\",\n              children: selectedMarker.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, this), selectedMarker.type && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-600 font-medium mb-1\",\n              children: selectedMarker.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 19\n            }, this), selectedMarker.rating && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-yellow-500 font-medium mb-1\",\n              children: [\"Rating: \", selectedMarker.rating, \" \\u2605\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 19\n            }, this), selectedMarker.description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-600\",\n              children: selectedMarker.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this), currentLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: currentLocation,\n            icon: {\n              path: google.maps.SymbolPath.CIRCLE,\n              fillColor: '#4285F4',\n              fillOpacity: 1,\n              scale: 8,\n              strokeColor: '#FFFFFF',\n              strokeWeight: 2\n            },\n            title: \"Your Exact Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            center: currentLocation,\n            radius: 50,\n            options: {\n              fillColor: '#4285F4',\n              fillOpacity: 0.15,\n              strokeColor: '#4285F4',\n              strokeOpacity: 0.5,\n              strokeWeight: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 left-4 bg-white p-4 rounded-lg shadow-md w-72\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold text-lg\",\n            children: \"WanderWise Router\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: sourceRef,\n                  type: \"text\",\n                  placeholder: \"Origin\",\n                  defaultValue: sourceValue,\n                  onChange: e => onInputValueChange('source', e.target.value),\n                  className: \"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 19\n                }, this), sourceValue && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\",\n                  onClick: () => clearField('source'),\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: destinationRef,\n                  type: \"text\",\n                  placeholder: \"Destination\",\n                  defaultValue: destinationValue,\n                  onChange: e => onInputValueChange('destination', e.target.value),\n                  className: \"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 19\n                }, this), destinationValue && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\",\n                  onClick: () => clearField('destination'),\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 790,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"avoidTolls\",\n                  checked: routePreferences.avoidTolls,\n                  onChange: handlePreferenceChange,\n                  className: \"rounded text-teal-500 focus:ring-teal-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n                    className: \"text-teal-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 21\n                  }, this), \" No Tolls\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"avoidHighways\",\n                  checked: routePreferences.avoidHighways,\n                  onChange: handlePreferenceChange,\n                  className: \"rounded text-teal-500 focus:ring-teal-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaTree, {\n                    className: \"text-teal-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 826,\n                    columnNumber: 21\n                  }, this), \" Scenic\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-300 rounded overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: toggleAlgorithmInfo,\n                className: `w-full px-3 py-2 text-sm font-medium ${showAlgorithmInfo ? 'bg-teal-50 text-teal-600' : 'text-gray-700 hover:bg-gray-50'} flex justify-between items-center`,\n                title: \"Click to select routing algorithm\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Algorithms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FaInfoCircle, {\n                  className: `transition-transform ${showAlgorithmInfo ? 'transform rotate-180' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 15\n            }, this), showAlgorithmInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 p-2 bg-gray-100 rounded border border-gray-200 text-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"algorithm\",\n                    value: \"a-star\",\n                    checked: algorithm === \"a-star\",\n                    onChange: handleAlgorithmChange,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: \"A* Algorithm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 857,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 ml-4\",\n                  children: \"Optimized pathfinding, fastest routes.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"algorithm\",\n                    value: \"dijkstra\",\n                    checked: algorithm === \"dijkstra\",\n                    onChange: handleAlgorithmChange,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 864,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: \"Dijkstra's Algorithm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 863,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 ml-4\",\n                  children: \"Finds shortest path, considers all options.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"algorithm\",\n                    value: \"bfs\",\n                    checked: algorithm === \"bfs\",\n                    onChange: handleAlgorithmChange,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 879,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: \"BFS (Breadth-First Search)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 878,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 ml-4\",\n                  children: \"Explores routes level by level, good for shorter distances.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 889,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"algorithm\",\n                    value: \"dfs\",\n                    checked: algorithm === \"dfs\",\n                    onChange: handleAlgorithmChange,\n                    className: \"mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 894,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: \"DFS (Depth-First Search)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 902,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 893,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 ml-4\",\n                  children: \"Explores deep routes first, can find scenic alternatives.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 904,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTransportModeChange(\"driving\"),\n              className: `p-2 rounded-full ${transportMode === \"driving\" ? \"bg-teal-500 text-white\" : \"bg-gray-200 text-gray-600\"}`,\n              title: \"Car\",\n              children: /*#__PURE__*/_jsxDEV(FaCar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTransportModeChange(\"flying\"),\n              className: `p-2 rounded-full ${transportMode === \"flying\" ? \"bg-teal-500 text-white\" : \"bg-gray-200 text-gray-600\"}`,\n              title: \"Flight\",\n              children: /*#__PURE__*/_jsxDEV(FaPlane, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTransportModeChange(\"walking\"),\n              className: `p-2 rounded-full ${transportMode === \"walking\" ? \"bg-teal-500 text-white\" : \"bg-gray-200 text-gray-600\"}`,\n              title: \"Walking\",\n              children: /*#__PURE__*/_jsxDEV(FaWalking, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTransportModeChange(\"transit\"),\n              className: `p-2 rounded-full ${transportMode === \"transit\" ? \"bg-teal-500 text-white\" : \"bg-gray-200 text-gray-600\"}`,\n              title: \"Transit\",\n              children: /*#__PURE__*/_jsxDEV(FaTrain, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: calculateRoute,\n              className: \"flex items-center justify-center bg-teal-500 text-white py-2 px-4 rounded hover:bg-teal-600 transition\",\n              disabled: isLoading,\n              children: isLoading ? \"Calculating...\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [transportMode === \"driving\" ? /*#__PURE__*/_jsxDEV(FaCar, {\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 52\n                }, this) : transportMode === \"flying\" ? /*#__PURE__*/_jsxDEV(FaPlane, {\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 969,\n                  columnNumber: 50\n                }, this) : transportMode === \"walking\" ? /*#__PURE__*/_jsxDEV(FaWalking, {\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 51\n                }, this) : /*#__PURE__*/_jsxDEV(FaTrain, {\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 971,\n                  columnNumber: 21\n                }, this), \"Calculate\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearRoute,\n              className: \"bg-red-500 text-white p-2 rounded hover:bg-red-600 transition\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: getCurrentLocation,\n              className: \"bg-blue-500 text-white p-2 rounded hover:bg-blue-600 transition\",\n              children: /*#__PURE__*/_jsxDEV(FaLocationArrow, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 13\n          }, this), distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 p-2 bg-gray-100 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Distance:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 42\n              }, this), \" \", distance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 42\n              }, this), \" \", duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: [\"Calculated using \", algorithm === \"a-star\" ? \"A*\" : algorithm === \"dijkstra\" ? \"Dijkstra's\" : algorithm === \"bfs\" ? \"BFS\" : \"DFS\", \" algorithm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500\",\n              children: [\"Transport mode: \", transportMode === \"driving\" ? \"Car\" : transportMode === \"flying\" ? \"Flight\" : transportMode === \"walking\" ? \"Walking\" : \"Transit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 15\n          }, this), toast.show && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mt-2 p-2 rounded text-sm ${toast.type === 'error' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'}`,\n            children: toast.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 587,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"ieB7e5DWscgFQXnplakM+2hZzto=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","FaLocationArrow","FaTimes","FaCar","FaTree","FaMoneyBillWave","FaInfoCircle","FaPlane","FaWalking","FaTrain","FaUser","FaHotel","FaUtensils","FaGasPump","FaStore","GoogleMap","Marker","Autocomplete","DirectionsRenderer","InfoWindow","Polyline","useJsApiLoader","Circle","routesService","GOOGLE_MAPS_LIBRARIES","GOOGLE_MAPS_API_KEY","MAP_OPTIONS","MAP_CONTAINER_STYLE","DEFAULT_CENTER","jsxDEV","_jsxDEV","Fragment","_Fragment","algorithmColors","transportSpeeds","Map","onRouteCalculated","sourceValue","destinationValue","onInputValueChange","onLocationUpdate","_s","isLoaded","googleMapsApiKey","libraries","sourceRef","destinationRef","mapRef","map","setMap","startMarker","setStartMarker","endMarker","setEndMarker","airports","setAirports","directionsResponse","setDirectionsResponse","flightPath","setFlightPath","distance","setDistance","duration","setDuration","routePreferences","setRoutePreferences","avoidTolls","avoidHighways","mode","algorithm","setAlgorithm","transportMode","setTransportMode","isLoading","setIsLoading","selectedMarker","setSelectedMarker","toast","setToast","show","message","type","showAlgorithmInfo","setShowAlgorithmInfo","currentLocation","setCurrentLocation","onMapLoad","current","showToast","setTimeout","getAddressFromCoordinates","coords","geocoder","google","maps","Geocoder","response","Promise","resolve","reject","geocode","location","results","status","GeocoderStatus","OK","formatted_address","Error","error","console","calculateRoute","value","sourcePlace","destPlace","sourceGeocode","address","destGeocode","sourceCoords","lat","geometry","lng","destCoords","bounds","LatLngBounds","extend","fitBounds","source","name","destination","distanceValue","durationValue","directionsResult","directDistance","spherical","computeDistanceBetween","LatLng","flying","sourceAirport","findNearbyAirports","destAirport","position","directionsService","DirectionsService","toAirportDirections","route","origin","travelMode","TravelMode","DRIVING","fromAirportDirections","toAirportDistance","routes","legs","fromAirportDistance","toAirportDuration","fromAirportDuration","toUpperCase","rendererOptions","directions","options","polylineOptions","strokeColor","strokeWeight","strokeOpacity","suppressMarkers","distanceText","Math","round","toFixed","durationText","floor","hours","minutes","algorithmName","clearRoute","clearField","field","getCurrentLocation","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","enableHighAccuracy","timeout","maximumAge","handleInputChange","setCenter","setZoom","handlePreferenceChange","e","checked","target","prev","handleAlgorithmChange","handleTransportModeChange","toggleAlgorithmInfo","getTransportIcon","fileName","_jsxFileName","lineNumber","columnNumber","airportOffset","random","airportLat","airportLng","alphabet","randomLetter","length","iataCode","iata","children","className","mapContainerStyle","center","zoom","onLoad","path","geodesic","icons","icon","scale","offset","repeat","label","url","scaledSize","Size","onClick","title","description","onCloseClick","rating","SymbolPath","CIRCLE","fillColor","fillOpacity","radius","ref","placeholder","defaultValue","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ansh9/Desktop/Projects/WanderWise/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\n/* global google */\nimport {\n  FaLocationArrow,\n  FaTimes,\n  FaCar,\n  FaTree,\n  FaMoneyBillWave,\n  FaInfoCircle,\n  FaPlane,\n  FaWalking,\n  FaTrain,\n  FaUser,\n  FaHotel,\n  FaUtensils,\n  FaGasPump,\n  FaStore\n} from \"react-icons/fa\";\nimport {\n  GoogleMap,\n  Marker,\n  Autocomplete,\n  DirectionsRenderer,\n  InfoWindow,\n  Polyline,\n  useJsApiLoader,\n  Circle\n} from \"@react-google-maps/api\";\n\nimport { routesService } from \"../services/api\";\nimport { \n  GOOGLE_MAPS_LIBRARIES, \n  GOOGLE_MAPS_API_KEY, \n  MAP_OPTIONS, \n  MAP_CONTAINER_STYLE, \n  DEFAULT_CENTER \n} from \"../utils/mapsConfig\";\n\n// Algorithm path colors\nconst algorithmColors = {\n  \"a-star\": \"#4285F4\", // Blue for A*\n  \"dijkstra\": \"#FF0000\", // Red for Dijkstra\n  \"bfs\": \"#00FF00\", // Green for BFS\n  \"dfs\": \"#FFA500\", // Orange for DFS\n};\n\n// Transport mode speeds in km/h\nconst transportSpeeds = {\n  \"driving\": 50,\n  \"flying\": 800,\n  \"walking\": 5,\n  \"transit\": 35,\n};\n\nconst Map = ({ onRouteCalculated, sourceValue, destinationValue, onInputValueChange, onLocationUpdate }) => {\n  // Add API loader\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAPS_API_KEY,\n    libraries: GOOGLE_MAPS_LIBRARIES,\n  });\n\n  // References\n  const sourceRef = useRef(null);\n  const destinationRef = useRef(null);\n  const mapRef = useRef(null);\n\n  // State\n  const [map, setMap] = useState(null);\n  const [startMarker, setStartMarker] = useState(null);\n  const [endMarker, setEndMarker] = useState(null);\n  const [airports, setAirports] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [flightPath, setFlightPath] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [routePreferences, setRoutePreferences] = useState({\n    avoidTolls: false,\n    avoidHighways: false,\n    mode: \"driving\",\n  });\n  const [algorithm, setAlgorithm] = useState(\"a-star\");\n  const [transportMode, setTransportMode] = useState(\"driving\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [toast, setToast] = useState({ show: false, message: \"\", type: \"\" });\n  const [showAlgorithmInfo, setShowAlgorithmInfo] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(null);\n\n  // Callback when map loads\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n    setMap(map);\n  }, []);\n\n  // Show toast notification\n  const showToast = (message, type = \"success\") => {\n    setToast({ show: true, message, type });\n    setTimeout(() => setToast({ show: false, message: \"\", type: \"\" }), 3000);\n  };\n\n  // Get address from coordinates\n  const getAddressFromCoordinates = async (coords) => {\n    try {\n      const geocoder = new google.maps.Geocoder();\n      const response = await new Promise((resolve, reject) => {\n        geocoder.geocode({ location: coords }, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results[0].formatted_address);\n          } else {\n            reject(new Error(\"Geocoding failed\"));\n          }\n        });\n      });\n      return response;\n    } catch (error) {\n      console.error(\"Error getting address:\", error);\n      return \"Current Location\";\n    }\n  };\n\n  // Calculate route using Google Directions Service\n  const calculateRoute = async () => {\n    if (!sourceRef.current.value || !destinationRef.current.value) {\n      showToast(\"Please enter both source and destination\", \"error\");\n      return;\n    }\n\n    setIsLoading(true);\n    setAirports(null);\n    setFlightPath(null);\n    // Close the algorithm panel after starting calculation\n    setShowAlgorithmInfo(false);\n\n    try {\n      // Get the places from autocomplete\n      const sourcePlace = sourceRef.current.value;\n      const destPlace = destinationRef.current.value;\n\n      // First, use Google's Geocoding to get coordinates\n      const geocoder = new google.maps.Geocoder();\n      \n      // Get source coordinates\n      const sourceGeocode = await new Promise((resolve, reject) => {\n        geocoder.geocode({ address: sourcePlace }, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results[0]);\n          } else {\n            reject(new Error(`Geocoding failed for ${sourcePlace}`));\n          }\n        });\n      });\n      \n      // Get destination coordinates\n      const destGeocode = await new Promise((resolve, reject) => {\n        geocoder.geocode({ address: destPlace }, (results, status) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results[0]);\n          } else {\n            reject(new Error(`Geocoding failed for ${destPlace}`));\n          }\n        });\n      });\n\n      const sourceCoords = {\n        lat: sourceGeocode.geometry.location.lat(),\n        lng: sourceGeocode.geometry.location.lng(),\n      };\n\n      const destCoords = {\n        lat: destGeocode.geometry.location.lat(),\n        lng: destGeocode.geometry.location.lng(),\n      };\n\n      // Set markers for source and destination (except for flights)\n      setStartMarker(sourceCoords);\n      setEndMarker(destCoords);\n\n      // Center the map to show both points\n      const bounds = new google.maps.LatLngBounds();\n      bounds.extend(sourceCoords);\n      bounds.extend(destCoords);\n      map.fitBounds(bounds);\n\n      // Now, use our backend API for route calculation using selected algorithm\n      const source = {\n        name: sourcePlace,\n        lat: sourceCoords.lat,\n        lng: sourceCoords.lng,\n      };\n\n      const destination = {\n        name: destPlace,\n        lat: destCoords.lat,\n        lng: destCoords.lng,\n      };\n\n      // Call our API to calculate path using the selected algorithm\n      await routesService.calculateRoute(\n        source,\n        destination,\n        algorithm,\n        transportMode\n      );\n\n      // Calculate appropriate distance and time based on transport mode\n      let distanceValue, durationValue, directionsResult;\n      \n      if (transportMode === \"flying\") {\n        // For flights, calculate direct distance and find airports\n        const directDistance = google.maps.geometry.spherical.computeDistanceBetween(\n          new google.maps.LatLng(sourceCoords),\n          new google.maps.LatLng(destCoords)\n        );\n        distanceValue = directDistance;\n        durationValue = (directDistance / 1000) / transportSpeeds.flying * 3600;\n        \n        // Find nearby airports\n        const sourceAirport = await findNearbyAirports(sourceCoords);\n        const destAirport = await findNearbyAirports(destCoords);\n        \n        // Set airport markers\n        if (sourceAirport && destAirport) {\n          setAirports({\n            source: sourceAirport,\n            destination: destAirport\n          });\n          \n          // Create flight path\n          setFlightPath([\n            sourceCoords,\n            sourceAirport.position, // From source to airport\n            destAirport.position,   // From airport to airport (flight)\n            destCoords              // From airport to destination\n          ]);\n          \n          // Get directions to and from airports\n          const directionsService = new google.maps.DirectionsService();\n          \n          // Source to source airport\n          const toAirportDirections = await directionsService.route({\n            origin: sourceCoords,\n            destination: sourceAirport.position,\n            travelMode: google.maps.TravelMode.DRIVING,\n          });\n          \n          // Destination airport to destination\n          const fromAirportDirections = await directionsService.route({\n            origin: destAirport.position,\n            destination: destCoords,\n            travelMode: google.maps.TravelMode.DRIVING,\n          });\n          \n          // Add these distances to total\n          const toAirportDistance = toAirportDirections.routes[0].legs[0].distance.value;\n          const fromAirportDistance = fromAirportDirections.routes[0].legs[0].distance.value;\n          \n          // Update total distance to include travel to/from airports\n          distanceValue += toAirportDistance + fromAirportDistance;\n          \n          // Update duration to include travel to/from airports\n          const toAirportDuration = toAirportDirections.routes[0].legs[0].duration.value;\n          const fromAirportDuration = fromAirportDirections.routes[0].legs[0].duration.value;\n          durationValue += toAirportDuration + fromAirportDuration;\n          \n          // Plus 2 hours for airport procedures\n          durationValue += 2 * 60 * 60; // 2 hours in seconds\n        }\n        \n        // Clear any existing directions\n        setDirectionsResponse(null);\n      } else {\n        // For other modes, get directions from Google\n        const directionsService = new google.maps.DirectionsService();\n        directionsResult = await directionsService.route({\n          origin: sourceCoords,\n          destination: destCoords,\n          travelMode: google.maps.TravelMode[transportMode.toUpperCase()],\n          avoidTolls: routePreferences.avoidTolls,\n          avoidHighways: routePreferences.avoidHighways,\n        });\n        \n        distanceValue = directionsResult.routes[0].legs[0].distance.value;\n        durationValue = directionsResult.routes[0].legs[0].duration.value;\n        \n        // Set directions with custom styling for algorithms\n        const rendererOptions = {\n          directions: directionsResult,\n          options: {\n            polylineOptions: {\n              strokeColor: algorithmColors[algorithm],\n              strokeWeight: 6,\n              strokeOpacity: 0.8\n            },\n            suppressMarkers: true // Suppress default markers since we're using custom ones\n          }\n        };\n        \n        setDirectionsResponse(rendererOptions);\n        setFlightPath(null);\n        setAirports(null);\n      }\n\n      // Format distance\n      let distanceText;\n      if (distanceValue < 1000) {\n        distanceText = `${Math.round(distanceValue)} m`;\n      } else {\n        distanceText = `${(distanceValue / 1000).toFixed(2)} km`;\n      }\n\n      // Format duration\n      let durationText;\n      if (durationValue < 60) {\n        durationText = `${Math.round(durationValue)} sec`;\n      } else if (durationValue < 3600) {\n        durationText = `${Math.floor(durationValue / 60)} min`;\n      } else {\n        const hours = Math.floor(durationValue / 3600);\n        const minutes = Math.floor((durationValue % 3600) / 60);\n        durationText = `${hours} hr ${minutes} min`;\n      }\n\n      setDistance(distanceText);\n      setDuration(durationText);\n\n      // Notify parent component about the calculated route\n      if (onRouteCalculated) {\n        onRouteCalculated(source, destination, {\n          source,\n          destination,\n          distance: distanceValue,\n          duration: durationValue,\n        });\n      }\n\n      // Show success message\n      let algorithmName;\n      switch (algorithm) {\n        case \"dijkstra\":\n          algorithmName = \"Dijkstra's\";\n          break;\n        case \"bfs\":\n          algorithmName = \"BFS\";\n          break;\n        case \"dfs\":\n          algorithmName = \"DFS\";\n          break;\n        default:\n          algorithmName = \"A*\";\n      }\n\n      showToast(`Route calculated using ${algorithmName} algorithm`);\n    } catch (error) {\n      console.error(\"Error calculating route:\", error);\n      showToast(error.message || \"Error calculating route\", \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear route\n  const clearRoute = () => {\n    setStartMarker(null);\n    setEndMarker(null);\n    setDirectionsResponse(null);\n    setFlightPath(null);\n    setAirports(null);\n    setDistance(\"\");\n    setDuration(\"\");\n    // Update parent state\n    onInputValueChange('source', '');\n    onInputValueChange('destination', '');\n  };\n\n  // Clear a specific field (origin or destination)\n  const clearField = (field) => {\n    if (field === 'source') {\n      onInputValueChange('source', '');\n      sourceRef.current.value = '';\n      if (startMarker) {\n        setStartMarker(null);\n        // If we have a route calculated, clear it\n        if (directionsResponse || flightPath) {\n          clearRoute();\n        }\n      }\n    } else if (field === 'destination') {\n      onInputValueChange('destination', '');\n      destinationRef.current.value = '';\n      if (endMarker) {\n        setEndMarker(null);\n        // If we have a route calculated, clear it\n        if (directionsResponse || flightPath) {\n          clearRoute();\n        }\n      }\n    }\n  };\n\n  // Update input refs when props change\n  useEffect(() => {\n    if (sourceRef.current && sourceValue) {\n      sourceRef.current.value = sourceValue;\n    }\n    if (destinationRef.current && destinationValue) {\n      destinationRef.current.value = destinationValue;\n    }\n  }, [sourceValue, destinationValue]);\n\n  // Center map on current position\n  const getCurrentLocation = async () => {\n    if (navigator.geolocation) {\n      setIsLoading(true);\n      try {\n        const position = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(\n            (pos) => resolve({ lat: pos.coords.latitude, lng: pos.coords.longitude }),\n            (error) => reject(error),\n            { \n              enableHighAccuracy: true,\n              timeout: 10000,\n              maximumAge: 0\n            }\n          );\n        });\n\n        // Set current location first time we get it\n        if (!currentLocation) {\n          setCurrentLocation(position);\n          \n          // Pass location to parent component\n          if (onLocationUpdate) {\n            onLocationUpdate(position);\n          }\n        }\n        \n        showToast(\"Exact location found!\");\n        \n        // Set the source field to current location\n        if (sourceRef.current) {\n          const address = await getAddressFromCoordinates(position);\n          sourceRef.current.value = address;\n          handleInputChange('source', address);\n        }\n        \n        if (map) {\n          map.setCenter(position);\n          map.setZoom(16); // Higher zoom for more precise location view\n        }\n      } catch (error) {\n        console.error(\"Error getting current location:\", error);\n        showToast(\"Unable to retrieve your exact location\", \"error\");\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      showToast(\"Error: Your browser doesn't support geolocation\", \"error\");\n    }\n  };\n\n  // Effect when component mounts - try to get current location automatically\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          setCurrentLocation(pos);\n          \n          // Pass current location to parent component\n          if (onLocationUpdate) {\n            onLocationUpdate(pos);\n          }\n        },\n        (error) => {\n          console.error(\"Geolocation error:\", error);\n        },\n        { \n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0\n        }\n      );\n    }\n  }, []);\n\n  // Handle route preference changes\n  const handlePreferenceChange = (e) => {\n    const { name, value, checked, type } = e.target;\n\n    setRoutePreferences((prev) => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  };\n\n  // Handle algorithm change\n  const handleAlgorithmChange = (e) => {\n    setAlgorithm(e.target.value);\n    \n    // Update route color if directions exist\n    if (directionsResponse) {\n      setDirectionsResponse({\n        ...directionsResponse,\n        options: {\n          ...directionsResponse.options,\n          polylineOptions: {\n            ...directionsResponse.options.polylineOptions,\n            strokeColor: algorithmColors[e.target.value]\n          }\n        }\n      });\n    }\n  };\n\n  // Handle transport mode change\n  const handleTransportModeChange = (mode) => {\n    setTransportMode(mode);\n    if (mode !== \"flying\") {\n      setAirports(null);\n      setFlightPath(null);\n    }\n  };\n\n  // Toggle algorithm info\n  const toggleAlgorithmInfo = () => {\n    setShowAlgorithmInfo(!showAlgorithmInfo);\n  };\n\n  // Get icon for transport mode button\n  const getTransportIcon = (mode) => {\n    switch (mode) {\n      case \"flying\":\n        return <FaPlane />;\n      case \"walking\":\n        return <FaWalking />;\n      case \"transit\":\n        return <FaTrain />;\n      default:\n        return <FaCar />;\n    }\n  };\n\n  // Find nearby airports\n  const findNearbyAirports = async (location) => {\n    try {\n      // In a real app, we'd use a Places API call\n      // For demonstration, we'll simulate finding airports\n      \n      // Generate a fake airport nearby (within ~10-20km)\n      const airportOffset = () => (Math.random() * 0.2) - 0.1; // Random offset of ~10km\n      \n      const airportLat = location.lat + airportOffset();\n      const airportLng = location.lng + airportOffset();\n      \n      // Generate an IATA code\n      const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      const randomLetter = () => alphabet[Math.floor(Math.random() * alphabet.length)];\n      const iataCode = randomLetter() + randomLetter() + randomLetter();\n      \n      return {\n        position: { lat: airportLat, lng: airportLng },\n        name: `${iataCode} International Airport`,\n        iata: iataCode\n      };\n    } catch (error) {\n      console.error(\"Error finding airports:\", error);\n      return null;\n    }\n  };\n\n  // Handle input changes and pass to parent component\n  const handleInputChange = (type, value) => {\n    if (onInputValueChange) {\n      onInputValueChange(type, value);\n    }\n  };\n\n  // Render loading state if Google Maps isn't loaded yet\n  if (!isLoaded) {\n    return <div>Loading Maps...</div>;\n  }\n\n  return (\n    <div className=\"flex h-full\">\n      {/* Main map container */}\n      <div className=\"relative w-full h-full\">\n        <GoogleMap\n          mapContainerStyle={MAP_CONTAINER_STYLE}\n          center={DEFAULT_CENTER}\n          zoom={10}\n          options={MAP_OPTIONS}\n          onLoad={onMapLoad}\n        >\n          {directionsResponse && (\n            <DirectionsRenderer \n              directions={directionsResponse.directions}\n              options={directionsResponse.options}\n            />\n          )}\n\n          {/* Flight path visualization with arcs */}\n          {flightPath && (\n            <>\n              {/* Source to departure airport path */}\n              <Polyline\n                path={[flightPath[0], flightPath[1]]}\n                options={{\n                  strokeColor: \"#808080\", // Gray for ground transport\n                  strokeOpacity: 0.8,\n                  strokeWeight: 3,\n                }}\n              />\n              \n              {/* Air route with arc */}\n              <Polyline\n                path={[flightPath[1], flightPath[2]]}\n                options={{\n                  strokeColor: algorithmColors[algorithm],\n                  strokeOpacity: 0.8,\n                  strokeWeight: 5,\n                  geodesic: true, // Creates an arc for flight path\n                  icons: [{\n                    icon: {\n                      path: 'M 0,-1 0,1',\n                      strokeOpacity: 1,\n                      scale: 4\n                    },\n                    offset: '0',\n                    repeat: '20px'\n                  }]\n                }}\n              />\n              \n              {/* Arrival airport to destination path */}\n              <Polyline\n                path={[flightPath[2], flightPath[3]]}\n                options={{\n                  strokeColor: \"#808080\", // Gray for ground transport\n                  strokeOpacity: 0.8,\n                  strokeWeight: 3,\n                }}\n              />\n            </>\n          )}\n\n          {startMarker && (\n            <Marker\n              position={startMarker}\n              label=\"A\"\n            />\n          )}\n\n          {endMarker && (\n            <Marker\n              position={endMarker}\n              label=\"B\"\n            />\n          )}\n\n          {/* Airport markers */}\n          {airports && (\n            <>\n              <Marker\n                position={airports.source.position}\n                icon={{\n                  url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n                  scaledSize: new google.maps.Size(32, 32)\n                }}\n                onClick={() => setSelectedMarker({\n                  position: airports.source.position,\n                  title: airports.source.name,\n                  description: `Airport code: ${airports.source.iata}`\n                })}\n              />\n              <Marker\n                position={airports.destination.position}\n                icon={{\n                  url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n                  scaledSize: new google.maps.Size(32, 32)\n                }}\n                onClick={() => setSelectedMarker({\n                  position: airports.destination.position,\n                  title: airports.destination.name,\n                  description: `Airport code: ${airports.destination.iata}`\n                })}\n              />\n            </>\n          )}\n\n          {selectedMarker && (\n            <InfoWindow\n              position={selectedMarker.position}\n              onCloseClick={() => setSelectedMarker(null)}\n            >\n              <div className=\"p-1\">\n                <h3 className=\"font-bold text-gray-900 mb-1\">\n                  {selectedMarker.title}\n                </h3>\n                {selectedMarker.type && (\n                  <div className=\"text-xs text-blue-600 font-medium mb-1\">\n                    {selectedMarker.type}\n                  </div>\n                )}\n                {selectedMarker.rating && (\n                  <div className=\"text-xs text-yellow-500 font-medium mb-1\">\n                    Rating: {selectedMarker.rating} ★\n                  </div>\n                )}\n                {selectedMarker.description && (\n                  <p className=\"text-xs text-gray-600\">\n                    {selectedMarker.description}\n                  </p>\n                )}\n              </div>\n            </InfoWindow>\n          )}\n\n          {/* Current location marker with accuracy circle */}\n          {currentLocation && (\n            <>\n              <Marker\n                position={currentLocation}\n                icon={{\n                  path: google.maps.SymbolPath.CIRCLE,\n                  fillColor: '#4285F4',\n                  fillOpacity: 1,\n                  scale: 8,\n                  strokeColor: '#FFFFFF',\n                  strokeWeight: 2,\n                }}\n                title=\"Your Exact Location\"\n              />\n              <Circle \n                center={currentLocation}\n                radius={50}\n                options={{\n                  fillColor: '#4285F4',\n                  fillOpacity: 0.15,\n                  strokeColor: '#4285F4',\n                  strokeOpacity: 0.5,\n                  strokeWeight: 1,\n                }}\n              />\n            </>\n          )}\n        </GoogleMap>\n\n        {/* Controls container */}\n        <div className=\"absolute top-4 left-4 bg-white p-4 rounded-lg shadow-md w-72\">\n          <div className=\"space-y-3\">\n            <h3 className=\"font-bold text-lg\">WanderWise Router</h3>\n            \n            <div>\n              <Autocomplete>\n                <div className=\"relative\">\n                  <input\n                    ref={sourceRef}\n                    type=\"text\"\n                    placeholder=\"Origin\"\n                    defaultValue={sourceValue}\n                    onChange={(e) => onInputValueChange('source', e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\n                  />\n                  {sourceValue && (\n                    <button \n                      className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                      onClick={() => clearField('source')}\n                    >\n                      ✕\n                    </button>\n                  )}\n                </div>\n              </Autocomplete>\n            </div>\n            <div>\n              <Autocomplete>\n                <div className=\"relative\">\n                  <input\n                    ref={destinationRef}\n                    type=\"text\"\n                    placeholder=\"Destination\"\n                    defaultValue={destinationValue}\n                    onChange={(e) => onInputValueChange('destination', e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\n                  />\n                  {destinationValue && (\n                    <button \n                      className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                      onClick={() => clearField('destination')}\n                    >\n                      ✕\n                    </button>\n                  )}\n                </div>\n              </Autocomplete>\n            </div>\n\n            <div className=\"flex items-center space-x-2 text-sm\">\n              <div className=\"mr-2\">\n                <label className=\"flex items-center space-x-1\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"avoidTolls\"\n                    checked={routePreferences.avoidTolls}\n                    onChange={handlePreferenceChange}\n                    className=\"rounded text-teal-500 focus:ring-teal-500\"\n                  />\n                  <span className=\"flex items-center\">\n                    <FaMoneyBillWave className=\"text-teal-500 mr-1\" /> No Tolls\n                  </span>\n                </label>\n              </div>\n              <div>\n                <label className=\"flex items-center space-x-1\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"avoidHighways\"\n                    checked={routePreferences.avoidHighways}\n                    onChange={handlePreferenceChange}\n                    className=\"rounded text-teal-500 focus:ring-teal-500\"\n                  />\n                  <span className=\"flex items-center\">\n                    <FaTree className=\"text-teal-500 mr-1\" /> Scenic\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            {/* Algorithm Selection - Box Style */}\n            <div className=\"mt-2\">\n              <div className=\"border border-gray-300 rounded overflow-hidden\">\n                <button \n                  onClick={toggleAlgorithmInfo}\n                  className={`w-full px-3 py-2 text-sm font-medium ${showAlgorithmInfo ? 'bg-teal-50 text-teal-600' : 'text-gray-700 hover:bg-gray-50'} flex justify-between items-center`}\n                  title=\"Click to select routing algorithm\"\n                >\n                  <span>Algorithms</span>\n                  <FaInfoCircle className={`transition-transform ${showAlgorithmInfo ? 'transform rotate-180' : ''}`} />\n                </button>\n              </div>\n              \n              {showAlgorithmInfo && (\n                <div className=\"mt-2 p-2 bg-gray-100 rounded border border-gray-200 text-xs\">\n                  <div className=\"mb-2\">\n                    <label className=\"flex items-center\">\n                      <input \n                        type=\"radio\" \n                        name=\"algorithm\" \n                        value=\"a-star\"\n                        checked={algorithm === \"a-star\"}\n                        onChange={handleAlgorithmChange}\n                        className=\"mr-1\"\n                      />\n                      <span className=\"font-medium\">A* Algorithm</span>\n                    </label>\n                    <p className=\"text-gray-600 ml-4\">Optimized pathfinding, fastest routes.</p>\n                  </div>\n                  \n                  <div className=\"mb-2\">\n                    <label className=\"flex items-center\">\n                      <input \n                        type=\"radio\" \n                        name=\"algorithm\" \n                        value=\"dijkstra\"\n                        checked={algorithm === \"dijkstra\"}\n                        onChange={handleAlgorithmChange}\n                        className=\"mr-1\"\n                      />\n                      <span className=\"font-medium\">Dijkstra's Algorithm</span>\n                    </label>\n                    <p className=\"text-gray-600 ml-4\">Finds shortest path, considers all options.</p>\n                  </div>\n                  \n                  <div className=\"mb-2\">\n                    <label className=\"flex items-center\">\n                      <input \n                        type=\"radio\" \n                        name=\"algorithm\" \n                        value=\"bfs\"\n                        checked={algorithm === \"bfs\"}\n                        onChange={handleAlgorithmChange}\n                        className=\"mr-1\"\n                      />\n                      <span className=\"font-medium\">BFS (Breadth-First Search)</span>\n                    </label>\n                    <p className=\"text-gray-600 ml-4\">Explores routes level by level, good for shorter distances.</p>\n                  </div>\n                  \n                  <div>\n                    <label className=\"flex items-center\">\n                      <input \n                        type=\"radio\" \n                        name=\"algorithm\" \n                        value=\"dfs\"\n                        checked={algorithm === \"dfs\"}\n                        onChange={handleAlgorithmChange}\n                        className=\"mr-1\"\n                      />\n                      <span className=\"font-medium\">DFS (Depth-First Search)</span>\n                    </label>\n                    <p className=\"text-gray-600 ml-4\">Explores deep routes first, can find scenic alternatives.</p>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Transport Mode Selection */}\n            <div className=\"flex justify-between mt-3\">\n              <button\n                onClick={() => handleTransportModeChange(\"driving\")}\n                className={`p-2 rounded-full ${\n                  transportMode === \"driving\"\n                    ? \"bg-teal-500 text-white\"\n                    : \"bg-gray-200 text-gray-600\"\n                }`}\n                title=\"Car\"\n              >\n                <FaCar />\n              </button>\n              <button\n                onClick={() => handleTransportModeChange(\"flying\")}\n                className={`p-2 rounded-full ${\n                  transportMode === \"flying\"\n                    ? \"bg-teal-500 text-white\"\n                    : \"bg-gray-200 text-gray-600\"\n                }`}\n                title=\"Flight\"\n              >\n                <FaPlane />\n              </button>\n              <button\n                onClick={() => handleTransportModeChange(\"walking\")}\n                className={`p-2 rounded-full ${\n                  transportMode === \"walking\"\n                    ? \"bg-teal-500 text-white\"\n                    : \"bg-gray-200 text-gray-600\"\n                }`}\n                title=\"Walking\"\n              >\n                <FaWalking />\n              </button>\n              <button\n                onClick={() => handleTransportModeChange(\"transit\")}\n                className={`p-2 rounded-full ${\n                  transportMode === \"transit\"\n                    ? \"bg-teal-500 text-white\"\n                    : \"bg-gray-200 text-gray-600\"\n                }`}\n                title=\"Transit\"\n              >\n                <FaTrain />\n              </button>\n            </div>\n            \n            <div className=\"flex justify-between\">\n              <button\n                onClick={calculateRoute}\n                className=\"flex items-center justify-center bg-teal-500 text-white py-2 px-4 rounded hover:bg-teal-600 transition\"\n                disabled={isLoading}\n              >\n                {isLoading ? (\n                  \"Calculating...\"\n                ) : (\n                  <>\n                    {transportMode === \"driving\" ? <FaCar className=\"mr-2\" /> :\n                    transportMode === \"flying\" ? <FaPlane className=\"mr-2\" /> :\n                    transportMode === \"walking\" ? <FaWalking className=\"mr-2\" /> :\n                    <FaTrain className=\"mr-2\" />}\n                    Calculate\n                  </>\n                )}\n              </button>\n              <button\n                onClick={clearRoute}\n                className=\"bg-red-500 text-white p-2 rounded hover:bg-red-600 transition\"\n              >\n                <FaTimes />\n              </button>\n              <button\n                onClick={getCurrentLocation}\n                className=\"bg-blue-500 text-white p-2 rounded hover:bg-blue-600 transition\"\n              >\n                <FaLocationArrow />\n              </button>\n            </div>\n\n            {/* Display distance and duration */}\n            {distance && duration && (\n              <div className=\"mt-2 p-2 bg-gray-100 rounded\">\n                <div className=\"text-sm\"><strong>Distance:</strong> {distance}</div>\n                <div className=\"text-sm\"><strong>Duration:</strong> {duration}</div>\n                <div className=\"text-xs text-gray-500 mt-1\">\n                  Calculated using {algorithm === \"a-star\" ? \"A*\" : \n                    algorithm === \"dijkstra\" ? \"Dijkstra's\" : \n                    algorithm === \"bfs\" ? \"BFS\" : \"DFS\"} algorithm\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  Transport mode: {transportMode === \"driving\" ? \"Car\" :\n                    transportMode === \"flying\" ? \"Flight\" :\n                    transportMode === \"walking\" ? \"Walking\" : \"Transit\"}\n                </div>\n              </div>\n            )}\n            \n            {/* Toast notification */}\n            {toast.show && (\n              <div className={`mt-2 p-2 rounded text-sm ${\n                toast.type === 'error' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'\n              }`}>\n                {toast.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}